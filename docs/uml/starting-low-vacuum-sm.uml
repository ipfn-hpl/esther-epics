@startuml
' Install Plantuml with:
'  sudo apt-get install plantuml 
' Lines starting with "'" are comments
' https://plantuml.com/state-diagram
' create png with: $ plantuml starting-low-vacuum-sm.uml
' EPICS Statem machine coded in 
' https://github.com/ipfn-hpl/esther-epics/blob/master/iocs/estherVacuumRpi4/vacApp/src/sncEstherVacuum.stt
'    lines after "ss StartingLVSequence {"
' 
' scale 350 width

hide empty description

[*] -> Start
state Start  <<start>>
Start -> Inactive

Inactive : Not controlling Instruments
' state Stopped {
'   [*] --> 
'  Idle --> Configuring : powerInst
'  Configuring --> Idle : EvConfig
' }

Inactive -down-> CheckCircuits : [Main State: StartingLowVacuum ]
state CheckCircuits  {
'  [*] --> NewValueSelection
'  NewValueSelection --> NewValuePreview : EvNewValue
'  NewValuePreview --> NewValueSelection : EvNewValueRejected
'  NewValuePreview --> NewValueSelection : EvNewValueSaved
'  state NewValuePreview {
'     State1 -> State2
'  }
'  --
    [*] -> HidraulicPressureON
    HidraulicPressureON -> WaterCircuitON
    WaterCircuitON -> FansTurbosON
    FansTurbosON ->  [*]
    state HidraulicPressureON #lightblue
    state WaterCircuitON #lightblue
    state FansTurbosON #lightblue
  --
    [*] -> OpenCTSTArm
    state "Open CTST Arm" as OpenCTSArm
    OpenCTSArm -> OpenSTDTArm
    state "Open STDT Arm" as OpenSTDTArm
    OpenSTDTArm -> [*]
}

CheckCircuits --> choicePre
CheckCircuits -up-> Start : Abort

state "Measure ST Pressure" as choicePre <<choice>>

choicePre --> OpenValvesPre : [Press(ST)  < 10 mBar]
choicePre --> StartDryPumpDT : [Press(ST)  >= 10 mBar]

state "Open Gate Valves" as OpenValvesPre  {
'  --
    [*] -> CTSTGateValveOn
    CTSTGateValveOn -> STDTGateValveOn
    STDTGateValveOn -> [*]
}
OpenValvesPre  -right-> CheckValvesPre

state "Check GV Open" as CheckValvesPre { 
    [*] -> checkCTSTGateValve
    state checkCTSTGateValve
    checkCTSTGateValve-> [*]
}
CheckValvesPre -down-> StartDryPumpDT

state StartDryPumpDT {
    [*] --> autoDT
    state "Auto" as autoDT
    ' <<fork>>
    autoDT --> DryPumpDTon : Auto
    autoDT ->  [*] : Manual
    state DryPumpDTon
    DryPumpDTon -> [*] :  Press(DT) < 500mBar
}
StartDryPumpDT -right-> StartDryPumpCT

state StartDryPumpCT  {
    [*] --> autoCT
    state "Auto" as autoCT <<fork>>
    autoCT --> DryPumpCTon : Auto
    autoCT -->  [*] : Manual
    state DryPumpCTon <<join>>

    DryPumpCTon -> [*]  :  Press(CT) < 100mBar

}

StartDryPumpCT -> StartDryPumpST

state StartDryPumpST {
    [*] -> DryPumpSTon 
    state DryPumpSTon
' state DryPumpSTon #green
    DryPumpSTon -> [*]
'     : Press(CT,ST)  <  1e-2 mBar

}
StartDryPumpST -down-> OpenValvesPost : Wait 50 sec

state "(Re)Open GT Valves" as OpenValvesPost {
    [*] -> CTSTGvOn
    CTSTGvOn -> STDTGvOn
    STDTGvOn -> [*]
}
OpenValvesPost -left-> CheckValves

state "Check GV Open" as CheckValves { 
    [*] --> checkCTSTGateVal
    checkCTSTGateVal -> checkSTDTGateVal
    checkSTDTGateVal -> [*]
}

CheckValves -left-> CheckLowVacuumDT

state CheckLowVacuumDT {
    [*] --> auto_DT
    state "Auto" as auto_DT
    ' <<fork>>
    auto_DT --> DryPumpDToff : Auto
    auto_DT ->  [*] : Manual
    state DryPumpDToff
    DryPumpDToff -> [*] :  Press(DT) < 25 mBar
}
CheckLowVacuumDT-left-> CheckLowVacuumCT

state CheckLowVacuumCT {
    [*] --> auto_CT
    state "Auto" as auto_CT
    ' <<fork>>
    auto_CT --> DryPumpCToff : Auto
    auto_CT ->  [*] : Manual
    state DryPumpCToff
    DryPumpCToff -> [*] :  Press(CT) < 1 mBar
}
CheckLowVacuumCT -down-> CheckPressures

state CheckPressures

CheckPressures -> [*]  :  Press(CT,ST)  <  1e-2 mBar
@enduml

